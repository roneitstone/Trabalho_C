/* Universidade Federal do Rio de Janeiro
 * Escola Politecnica
 * Departamento de Eletronica e de Computacao
 * EEL270 - Computacao II - Turma 2020/1
 * Prof. Marcelo Luiz Drumond Lanza
 * Autor: Eduardo Bruno Martins Esperanca
 * Descricao: gera o cpf e printa na tela , usando variavel do tipo unsigned char;
 *
 * $Author: eduardo.esperanca $
 * $Date: 2021/01/18 20:14:51 $
 * $Log: aula0507.c,v $
 * Revision 1.3  2021/01/18 20:14:51  eduardo.esperanca
 * correcao de cabecalho..
 *
 * Revision 1.2  2021/01/18 18:58:42  eduardo.esperanca
 * ajuste na variavel de envio.
 *
 * Revision 1.1  2021/01/17 22:15:52  eduardo.esperanca
 * Initial revision
 *
 */

#include <stdio.h>
#include <stdlib.h>
#include "aula0501.h"

#define FINALIZADO                    0
#define NUMERO_DE_ARGUMENTOS          1
#define NUMERO_DE_ARGUMENTOS_INVALIDO 2
#define ARGUMENTO_INVALIDO            1
#define END_OF_STRING                 '\0'
#define CPF_INVALIDO                  3


int
main (int argc, char *argv[])
{
   int index ;
   tipoErros validador;
   byte cpf[15];

   if(argc != NUMERO_DE_ARGUMENTOS)
   {
     printf ("\n\n Numero de argumentos fora do padr√£o. :( \n\n");
    return NUMERO_DE_ARGUMENTOS_INVALIDO;
   }

   validador = GerarCpf(cpf);

   if(validador != ok)
   {
      printf ("\n\n Ocorreu um erro ao gerar o cpf. ;( \n\n");
      return CPF_INVALIDO;
   }
   else
   {
      printf ("\n\n CPF: ");
      for(index = 0 ; index != 11 ; index++)
      {
         printf ("%d", cpf[index]);
         if(index == 2 || index == 5)
         {
            printf (".");
         }
         if(index == 8)
         {
            printf ("/");
         }
      }
      printf ("\n\n");
   }

   return FINALIZADO;
}

/*$RCSfile: aula0507.c,v $*/
