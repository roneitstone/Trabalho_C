/* Universidade Federal do Rio de Janeiro
 * Escola Politecnica
 * Departamento de Eletronica e de Computacao
 * EEL270 - Computacao II - Turma 2020/1
 * Prof. Marcelo Luiz Drumond Lanza
 * Autor: Eduardo Bruno Martins Esperanca
 * Descricao: recebe os 9 primeiros digitos do cpf em um cli e printa os verificadores;
 *
 * $Author: eduardo.esperanca $
 * $Date: 2021/01/18 20:06:20 $
 * $Log: aula0505b.c,v $
 * Revision 1.2  2021/01/18 20:06:20  eduardo.esperanca
 * correcao de cabecalho.
 *
 * Revision 1.1  2021/01/18 17:01:41  eduardo.esperanca
 * Initial revision
 *
 */

#include <stdio.h>
#include <stdlib.h>
#include "aula0504.h"

#define FINALIZADO                    0
#define NUMERO_DE_ARGUMENTOS          2
#define NUMERO_DE_ARGUMENTOS_INVALIDO 2
#define ARGUMENTO_INVALIDO            1
#define END_OF_STRING                 '\0'


int
protect (char arg[])
{
   int count;
   for(count = 0; arg[count] != END_OF_STRING;)
   {
      if(count > 8 )
      {
         return ARGUMENTO_INVALIDO;
      }
      count++;
   }
   if(count != 9)
   {
      return ARGUMENTO_INVALIDO;
   }

   return FINALIZADO;
}

int
main (int argc, char *argv[])
{
   char *verificacao;
   char dv1[2];
   char dv2[2];
   if(argc != NUMERO_DE_ARGUMENTOS)
   {
      printf ("\n\n Numero de argumentos fora do padr√£o, por favor digite apenas 1 cli com os 9 digitos. :( \n\n");
     return NUMERO_DE_ARGUMENTOS_INVALIDO;
   }

   if(protect(argv[1]) != FINALIZADO)
   {
      printf ("\n\n Coloque APENAS 9 digitos. :( \n\n");
      return ARGUMENTO_INVALIDO;
   }

   strtoul(argv[1], &verificacao, 10);

   if(*verificacao != END_OF_STRING)
   {
      printf ("\n\n Argumento invalido verificado < %c > \n\n", *verificacao);
      return ARGUMENTO_INVALIDO;
   }

   GerarDigitosVerificadoresCpf(argv[1], dv1, dv2);

   printf ("\n\n Digitos Verificadores = %s%s \n\n", dv1, dv2);

   return FINALIZADO;
}









/*$RCSfile: aula0505b.c,v $*/
