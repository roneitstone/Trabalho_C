
/* Universidade Federal do Rio de Janeiro
 * Escola Politecnica
 * Departamento de Eletronica e de Computacao
 * EEL270 - Computacao II - Turma 2020/1
 * Prof. Marcelo Luiz Drumond Lanza
 * Autor: Eduardo Bruno Martins Esperanca
 * Descricao: Gera cpf usando uma variavel do tipo char;
 *
 * $Author: eduardo.esperanca $
 * $Date: 2021/01/18 20:18:13 $
 * $Log: aula0510.c,v $
 * Revision 1.2  2021/01/18 20:18:13  eduardo.esperanca
 * correcao de cabecalho.
 *
 * Revision 1.1  2021/01/17 22:16:48  eduardo.esperanca
 * Initial revision
 *
 */

#include <stdio.h>
#include <stdlib.h>
#include "aula0508.h"

#define FINALIZADO                    0
#define NUMERO_DE_ARGUMENTOS          1
#define NUMERO_DE_ARGUMENTOS_INVALIDO 2
#define ARGUMENTO_INVALIDO            1
#define END_OF_STRING                 '\0'
#define CPF_INVALIDO                  3


int
main (int argc, char *argv[])
{
   int index ;
   int adiantador = 0;
   char aux[15];
   char cpf[15];

   if(argc != NUMERO_DE_ARGUMENTOS)
   {
     printf ("\n\n Numero de argumentos fora do padr√£o, por favor digitenenhum CLI. :( \n\n");
     return NUMERO_DE_ARGUMENTOS_INVALIDO;
   }

   GerarCpf(cpf);

   for(index = 0 ; index != 15 ; index++)
   {
      if(index != 3 && index != 7 && index != 11)
      {
         aux[index] = cpf[index-adiantador];
      }
      if(index == 3 || index == 7)
      {
         aux[index] = '.';
         adiantador++;
      }
      if(index == 11)
      {
         aux[index] = '/';
         adiantador++;
      }
   }
   aux[index] = END_OF_STRING;

   for (index = 0 ;aux[index] != END_OF_STRING; index++)
   {
      cpf[index] = aux[index];
   }
   cpf[index] = END_OF_STRING;

   printf ("\n\n CPF: %s \n\n", cpf);

   return FINALIZADO;
}

/*$RCSfile: aula0510.c,v $*/
